<?php

namespace App\Controller;

use App\Entity\User;
use App\Form\IsPhotographerFormType;
use App\Form\UploadAvatarFormType;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;

class UserController extends AbstractController
{
    /**
     * @Route("/user/{userID}", name="app_userProfile")
     */
    public function profile($userID, Request $request)
    {
        $user = $this->getDoctrine()->getRepository(User::class)->find($userID);
        //authenticate
        if ($user == null) {
            return $this->redirectToRoute('app_index');
        }
        //----------------------------------------------------------------------------
        //change status form
        $form = $this->createForm(IsPhotographerFormType::class, $user);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid())
        {
            $user = $form->getData();

            $em = $this->getDoctrine()->getManager();
            $em->persist($user);
            $em->flush();
        }
        //---------------------------------------------------------------------------
        //upload profile picture form
        $form_upload=$this->createForm(UploadAvatarFormType::class, $user);
        $form_upload->handleRequest($request);

        if ($form_upload->isSubmitted() && $form_upload->isValid())
        {
            $fileSystem = new Filesystem();
            $oldAvatar = $user->getAvatar();

            /** @var UploadedFile $file */
            $file = $form_upload['avatar']->getData();

            if ($file)
            {
                if ($oldAvatar != null)
                {
                    $fileSystem->remove($this->getParameter('avatar_directory') . '/' . $oldAvatar);
                }
                $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

                // moves the file to the directory where avatars are stored
                $file->move(
                    $this->getParameter('avatar_directory'),
                    $fileName
                );

                $user->setAvatar($fileName);

                $em = $this->getDoctrine()->getManager();
                $em->persist($user);
                $em->flush();

                $this->addFlash('success', 'Avatar changed successfully');
            }
        }

        return $this->render('user/profile.html.twig', [
            'user' => $user,
            'form' => $form->createView(),
            'form_upload' => $form_upload->createView(),
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
